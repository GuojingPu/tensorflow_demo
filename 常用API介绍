"""****************************** 常用API介绍 *************************************"""
"""

    tf.truncated_normal(shape, mean=0.0, stddev=1.0, dtype=tf.float32,
                        seed=None, name=None)
    从截断的正态分布中输出随机值。生成的值服从具有指定平均值和标准偏差的正态分布，
    如果生成的值大于平均值2个标准偏差的值则丢弃重新选择。
    shape: 一维的张量，也是输出的张量。
    mean: 正态分布的均值。
    stddev: 正态分布的标准差。
    dtype: 输出的类型。
    seed: 一个整数，当设置之后，每次生成的随机数都一样。
    name: 操作的名字
"""

"""
tf.random_normal(shape, mean=0.0, stddev=1.0, dtype=tf.float32, seed=None, name=None)

从正态分布中输出随机值。
参数:
    shape: 一维的张量，也是输出的张量。
    mean: 正态分布的均值。
    stddev: 正态分布的标准差。
    dtype: 输出的类型。
    seed: 一个整数，当设置之后，每次生成的随机数都一样。
    name: 操作的名字。

"""

"""
tf.random_uniform(shape,minval=0,maxval=None,dtype=tf.float32,seed=None,name=None)
均匀分布随机数，范围为[minval,maxval]
"""


"""
tf.constant(value, dtype=None, shape=None, name=’Const’) 
    创建一个常量tensor，按照给出value来赋值，可以用shape来指定其形状。
    value可以是一个数，也可以是一个list。 如果是一个数，那么这个常亮中
    所有值的按该数来赋值。 如果是list,那么len(value)一定要小于等于shape
    展开后的长度。赋值时，先将value中的值逐个存入。不够的部分，则全部存
    入value的最后一个值。
"""

"""
tf.reshape
tf.reshape(tensor, shape, name=None) 
顾名思义，就是将tensor按照新的shape重新排列。一般来说，shape有三种用法： 
如果 shape=[-1], 表示要将tensor展开成一个list 
如果 shape=[a,b,c,…] 其中每个a,b,c,..均>0，那么就是常规用法 
如果 shape=[a,-1,c,…] 此时b=-1，a,c,..依然>0。这表示tf会根据tensor的原尺寸，自动计算b的值。 
"""


"""
tf.nn.dropout
dropout(x, keep_prob, noise_shape=None, seed=None, name=None) 
按概率来将x中的一些元素值置零，并将其他的值放大。用于进行dropout操作，
一定程度上可以防止过拟合 .x是一个张量，而keep_prob是一个（0,1]之间的值。
x中的各个元素清零的概率互相独立，为1-keep_prob,而没有清零的元素，则会统
一乘以1/keep_prob, 目的是为了保持x的整体期望值不变。

"""

"""
tf.nn.conv2d (input, filter, strides, padding, use_cudnn_on_gpu=None,
                                    data_format=None, name=None)

input :  输入的要做卷积的图片，要求为一个张量，shape为 [ batch, in_height, in_weight, in_channel ]，
         其中batch为图片的数量，in_height 为图片高度，in_weight 为图片宽度，in_channel 为图片的通道数，
         灰度图该值为1，彩色图为3。（也可以用其它值，但是具体含义不是很理解）
filter： 卷积核，要求也是一个张量，shape为 [ filter_height, filter_weight, in_channel, out_channels ]，
         其中 filter_height 为卷积核高度，filter_weight 为卷积核宽度，in_channel 是图像通道数 ，和 input
         的 in_channel 要保持一致，out_channel 是卷积核数量。
strides：卷积时在图像每一维的步长，这是一个一维的向量，[ 1, strides, strides, 1]，第一位和最后一位固定必须是1
padding：string类型，值为“SAME” 和 “VALID”，表示的是卷积的形式，是否考虑边界。"SAME"是考虑边界，不足的时候用0
         去填充周围，"VALID"则不考虑
use_cudnn_on_gpu：bool类型，是否使用cudnn加速，默认为true

"""

"""
tf.argmax(input, axis=None, name=None, dimension=None)
对矩阵按行或列计算最大值 所在的下标
四个参数：
1.input：输入值
2.axis：可选值0表示按列，1表示按行求最大值
3.name
4.默认使用axis即可

举例：
test = np.array([[1, 2, 3], [2, 3, 4], [5, 4, 3], [8, 7, 2]])
np.argmax(test, 0)　　　＃输出：array([3, 3, 1]
np.argmax(test, 1)　　　＃输出：array([2, 2, 0, 0]

"""


"""*******************************************************************"""
